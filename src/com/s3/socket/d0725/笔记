数据链路层: ARP, RARP
网络层: IP, ICMP, IGMP
传输层: TCP ,UDP, UGP
应用层: Telnet, FTP, SMTP, SNMP.
套接字编程是位于应用层
一台机器上的Socket与另一台机器上的套接字联接就会
创建一条通信通道.当发送数据时，TCP/IP协议 栈的每
一层都会添加适当的报头信息来包装数据。这些报头帮
助协议栈把数据送到目的地。Java语 言通过流为代码提
供数据，从而隐藏了所有这些细节，所以被称为流套接.
字.
套接字有两种形式: TCP (由Socket实现)
UDP (DataGramSocket实现)


TCP transmission control protocol: 可靠的，端到端
出宇节流通信协议。是一-种 面向连接的协议。
UDP:user data protocol: UDP提供了一种 发送封装的原始IP数据报的方法，并且发送时无需建立连接，是一种不可靠的连接.


TCP工作原理:它将消息分解成数据包并在接收端以正确的顺序再重新装配起来。它还处理地遗失数据包的重传请求。
三次握手的原理
TCP建立联接时的三次握手:
第一次握手:建立连接时，客户端发送syn包(syn=j)到服务器，并进入SYN_ SEND状态，等待服务器确认;
第二次握手:服务器收到syn包，必须确认客户的sYN (ack=j+1)，同时自己也发送一个SYN包(synr=k) ，即SYN+ACK包， 此时服务器进入SYN_ RECV状态;
第三次握手:客户端收到服务器的SYN+ACK包，向服务器发送确认包ACK(ack=k+1)，此包发送完毕，客户端和服务器进入ESTABLISHED状态，完成三次握手。完成三次握手，客户端与服务器开始传送数据。。。。。
UDP不提供装配和重传请求。它只向前传送信息包。
区别: TCP是面向连接的，UDP是面向非联接的.
