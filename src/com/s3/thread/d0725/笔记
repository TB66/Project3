当今的操作系统绝大部分都是基于多任务的操作系统;
多任务操作系统的最大特点，是可以同时运行多个程序，
由于操作系统支持时间片轮换算法，使得用户感觉多个程序在同时运行，似乎有多个CPU在起作用。
Windows是一个多进程多线程的系统.

多线程优点
*在基于线程的多任务而处理环境中，线程是执行特定任务的可执行代码的最小单位。
多线程帮助你写出CPU最大利用率的高效程序，因为空闲时间保持最低，这对Java运行的交互式的网络互连环境是至关
重要的，例如:网络的数据传输速率远低于计算机的处理能力，在传统的单线程环境中，你的计算机必须花费大量
的空闲时间来等待，多线程能够使你充分利用这些空闲时间。

进程与线程的区别
进程是指系统中正在运行中的应用程序，它拥有自己独立的内存空间; .
线程是指进程中一个执行流程，一个进程中允许同时启动多个线程，他们分别执行不同的任务;
线程与进程的主要区别在于:每个进程都需要操作系统为其分配独立的内存地址空间，而同一进程中的所有线程在
同一块地址空间中，这些线程可以共享数据，因此线程间，的通信比较简单，消耗的系统开销也相对较小。
多进程:在操作系统能同时运行多个任务
多线程:在同一应用程序中有 多个顺序流同时执行

心Thread类共提供8种构造方法重载，以下是常用的几种:
构造方法								说明
Thread()							创建-个新的线程
Thread(String name)					创建-一个指定名称的线程
Thread(Runnable target)				利用Runnable对象创建一个线程， 启动时将执行该对象的nun方法			
Thread(Runnable target, String name)利用Runnable对象创建一个线程， 并指定该线程的名称
